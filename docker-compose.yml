version: '3'
services:
  elasticsearch:
    hostname: elasticsearch
    image: jonbrouse/elk:elasticsearch-6.5.3
    build: elasticsearch
    environment:
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    networks:
      - elk
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      #- "elasticsearch_data_volume:/opt/elasticsearch/data"
      - ./backup/source/opt/elasticsearch/data:/opt/elasticsearch/data

  logstash:
    hostname: logstash
    image: jonbrouse/elk:logstash-6.5.3
    build: logstash
    ports:
      - "24642:24642"
      - "35753:35753"
    #command: -f /usr/share/logstash/config/conf.d/logstash.conf --log.level debug
    command: -f /usr/share/logstash/config/conf.d/logstash.conf
    tty: true
    privileged: true
    volumes:
      - ./logstash/assets/logstash.conf:/usr/share/logstash/config/conf.d/logstash.conf
      - ./logs/cloudfront:/logs/cloudfront
      - "logstash_data_volume:/home/logstash"
    links:
      - elasticsearch
    networks:
      - elk
    environment:
      - CLOUDTRAIL_BUCKET
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY

  kibana:
    hostname: kibana
    image: jonbrouse/elk:kibana-6.5.3
    build: kibana
    links:
      - elasticsearch
    networks:
      - elk
    volumes:
      - ./kibana/assets/kibana.yml:/usr/share/kibana/config/kibana.yml

  nginx:
    hostname: nginx
    image: nginx:stable-alpine
    links:
      - kibana
    ports:
      - "80:80"
      - "443:443"
    networks:
      - elk
    volumes:
      - ./nginx/assets/certs:/etc/nginx/certs
      - ./nginx/assets/nginx.conf:/etc/nginx/nginx.conf

networks:
  elk:
    ipam:
      config:
      -
        subnet: 172.72.73.0/24

volumes:
  elasticsearch_data_volume:
  logstash_data_volume:
